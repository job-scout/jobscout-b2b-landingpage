name: Production Deployment

on:
  push:
    branches:
    - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    # - name: Set up Node.js
    #   uses: actions/setup-node@v2
    #   with:
    #     node-version: '18.17'
    
    - name: Setting Environment Variables
      run: |
        ############### SETTING ENV FILE STARTS ######################################################
        #FILE_NAME=".env"
        #echo "NEXT_PUBLIC_GOOGLE_ANALYTICS_TRACKING_ID=${{vars.NEXT_PUBLIC_GOOGLE_ANALYTICS_TRACKING_ID}}" > $FILE_NAME
        #echo "NEXT_PUBLIC_API_URL=${{vars.NEXT_PUBLIC_API_URL}}" >> $FILE_NAME
        ############### SETTING ENV FILE END ######################################################

    - name: SSH Connection
      run: |
        mkdir -p ~/.ssh
        echo "$PRIVATE_KEY_CONTENT" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{secrets.DEPLOY_USER}}@${{secrets.DEPLOY_HOST}} echo "Connection established"
      env:
        PRIVATE_KEY_CONTENT: ${{secrets.DEPLOY_KEY}}
      
    - name: Coping Files to Server
      run: |
        ssh ${{secrets.DEPLOY_USER}}@${{secrets.DEPLOY_HOST}} "sudo rm -rf jobscout_landing && sudo mkdir -p jobscout_landing"
        sudo tar --exclude=".git*" --exclude="id_rsa" --exclude="*.yml" -cf - . | ssh ${{secrets.DEPLOY_USER}}@${{secrets.DEPLOY_HOST}} "sudo tar -C jobscout_landing -xf -"
        ssh ${{secrets.DEPLOY_USER}}@${{secrets.DEPLOY_HOST}} "docker build --rm -t jobscout_landing_image jobscout_landing/"
        ssh ${{secrets.DEPLOY_USER}}@${{secrets.DEPLOY_HOST}} "docker stop jobscout_landing || true"
        ssh ${{secrets.DEPLOY_USER}}@${{secrets.DEPLOY_HOST}} "docker rm jobscout_landing || true"
        ssh ${{secrets.DEPLOY_USER}}@${{secrets.DEPLOY_HOST}} "docker run -p 3000:3000 --rm --name jobscout_landing -dt jobscout_landing_image"
        ssh ${{secrets.DEPLOY_USER}}@${{secrets.DEPLOY_HOST}} "docker system prune -f"
        ssh ${{secrets.DEPLOY_USER}}@${{secrets.DEPLOY_HOST}} "sudo service nginx restart"